name: Make Check

on:
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - "**.md"
      - "**.rst"
      - LICENSE
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "**.rst"
      - LICENSE

jobs:
  job:
    name: ${{ matrix.os }}-make-check
    runs-on: ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'skip check')"
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
        compiler:
          - gcc
          - clang
        unistr:
          - On
          - Off

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install Dependencies (Linux)
      run: sudo apt-get install -y valgrind libunistring-dev
      if: "contains( matrix.os, 'ubuntu')"

    - name: Install Dependencies (MacOS)
      run: brew install libunistring
      if: "contains( matrix.os, 'macos')"

    - name: Create Build Environment
      run: |
        cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake (CLANG)
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: |
        export CC=${{ matrix.compiler }}
        cmake $GITHUB_WORKSPACE -DENABLE_ADDRESS_SANITIZER=On -DENABLE_DEBUG=On -DENABLE_UNISTR=${{ matrix.unistr }}
      if: "contains( matrix.compiler, 'clang')"

    - name: Configure CMake (GCC)
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: |
        export CC=${{ matrix.compiler }}
        cmake $GITHUB_WORKSPACE -DENABLE_VALGRIND=On -DENABLE_DEBUG=On -DENABLE_UNISTR=${{ matrix.unistr }}
      if: "contains( matrix.compiler, 'gcc')"

    - name: Build Check
      shell: bash
      working-directory: ${{github.workspace}}/build
      run: |
        make
        make install
        ASAN_OPTIONS="detect_leaks=1" make check
